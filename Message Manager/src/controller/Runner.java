package controller;

import view.Logger;

/*
	краткое описание классов:

controller > 

Runner -- точно входа в программу; 

JarApp -- управляющий класс перемещениями между окнами программы; 

JarMess -- управляющий класс сообщениями (отправка, сохранение и т.п.); 

JarUsers -- управляющий класс пользователями (аналогично). 


model > 

Aliases -- Enum, хранящий названия классов-приложений. Нужен для работы JarApp; 

Chat -- класс чата (поля: заголовок, описание, а также хранит пользователей, 
которые находятся в чате; все отправленные, внутри чата сообщения); 

Data -- "эксперементальный" класс (нужен для оптимизации работы с файлами); 

Message -- класс сообщения (поля: текст сообщения, отправитель, прочтено/нет, 
отправлено/нет, время отправления, а также пользоватлей, 
которым отправлено это сообщение (все из чата)); 

User -- класс пользователь (поля: логин, пароль, имя, онлайн/нет, 
а также контакты (пользователей, которых добавил), и чаты, в которых состоит); 


view > 
AllContacts -- класс, который позволяет находить всех зарегистрированных 
пользователей и добавить их; 

App -- абстрактный класс, от которого наследуются классы-приложения. 
(Нужен для иерархии, а также добавления к каждому унаследованому классу 
поле aliace (для работы JavApp); 

Cabinet -- класс-приложение, основное "окно" программы, 
позволяет пользователю манипулировать с имеющимися чатами, 
перехоть к своим "Контактам"; 

Contacts -- класс-приложение, позволяет пользователю манипулировать 
со своими контактами, также добовлять новые контакты, и начинать чат 
с выбранными контактами; 

Dialog -- класс-приложение, сам чат, в котором пользователи обмениваются сообщениями; 

Logger -- класс-приложение, "окно" входа в систему. 
Нужен идентификации пользователя в системе. Также позволяет перейти к "Регистрации"; 

Registration -- класс-приложение, "окно" регистрации пользователя.
*/

public class Runner {

	public static void main(String[] args) {
		Logger.start();
	}

}
